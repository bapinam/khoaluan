// <auto-generated />
using System;
using KhoaLuan.Data.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KhoaLuan.Data.Migrations
{
    [DbContext(typeof(EnterpriseDbContext))]
    [Migration("20210523214821_ChangeProcess")]
    partial class ChangeProcess
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("KhoaLuan.Data.Entities.AppRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("88a28f0b-99cd-4893-ab70-0189c8c7fec5"),
                            ConcurrencyStamp = "bb30e080-9008-4846-82b2-0e6af5b6a938",
                            Description = "Vai trò Administrator",
                            Name = "Admin",
                            NormalizedName = "Admin"
                        });
                });

            modelBuilder.Entity("KhoaLuan.Data.Entities.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<bool>("AccountType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("BirthDay")
                        .HasColumnType("datetime2");

                    b.Property<string>("Card")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<int>("JobStatus")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PathImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("Code", "Card")
                        .IsUnique();

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0275d5a7-da4a-41c3-85ed-15e53cd1b7a0"),
                            AccessFailedCount = 0,
                            AccountType = true,
                            Address = "Cần Thơ",
                            BirthDay = new DateTime(2020, 1, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Card = "0123456789",
                            Code = "Admin",
                            ConcurrencyStamp = "5270fb05-6a7f-4756-bfee-b49d574886e2",
                            Email = "khoaluan@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Nam",
                            Gender = true,
                            JobStatus = 1,
                            LastName = "Lương Nhựt",
                            LockoutEnabled = false,
                            NormalizedEmail = "khoaluan@gmail.com",
                            NormalizedUserName = "admin",
                            PasswordHash = "AQAAAAEAACcQAAAAELrM5K3O5k3HEzffp9qwWp6gALD271dFDzIlx5pyfHhIamV03Gh3tEUK912D4ThwAg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            TwoFactorEnabled = false,
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("KhoaLuan.Data.Entities.Bill", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<decimal>("AmountPaid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<string>("CodeBill")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ConvertNumbers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2021, 5, 24, 4, 48, 18, 809, DateTimeKind.Local).AddTicks(8551));

                    b.Property<Guid>("IdCreator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("IdPlan")
                        .HasColumnType("bigint");

                    b.Property<int>("IdSupplier")
                        .HasColumnType("int");

                    b.Property<string>("Images")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaymentStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<DateTime>("PurchaseDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2021, 5, 24, 4, 48, 18, 811, DateTimeKind.Local).AddTicks(3192));

                    b.Property<string>("StorageCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("Tax")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalMoney")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.HasKey("Id");

                    b.HasIndex("IdCreator");

                    b.HasIndex("IdPlan");

                    b.HasIndex("IdSupplier");

                    b.HasIndex("StorageCode")
                        .IsUnique();

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("KhoaLuan.Data.Entities.BillDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<int>("Amount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<int?>("Discount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<long>("IdBill")
                        .HasColumnType("bigint");

                    b.Property<int>("IdMaterials")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalPrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdBill");

                    b.HasIndex("IdMaterials");

                    b.ToTable("BillDetails");
                });

            modelBuilder.Entity("KhoaLuan.Data.Entities.ManageCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<long>("Location")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("Top")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("TypeCode")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ManageCodes");
                });

            modelBuilder.Entity("KhoaLuan.Data.Entities.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<long>("Amount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdMaterialsType")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("Max")
                        .HasColumnType("bigint");

                    b.Property<long?>("Min")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AI");

                    b.Property<bool>("Reminder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("ReminderEndDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2021, 5, 24, 4, 48, 18, 846, DateTimeKind.Local).AddTicks(5448));

                    b.Property<DateTime>("ReminderStartDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2021, 5, 24, 4, 48, 18, 846, DateTimeKind.Local).AddTicks(4969));

                    b.HasKey("Id");

                    b.HasIndex("IdMaterialsType");

                    b.HasIndex("Code", "Name")
                        .IsUnique();

                    b.ToTable("Materials");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 10L,
                            Code = "NVL1",
                            Description = "Bột gạo dùng để làm bánh",
                            IdMaterialsType = 1,
                            Max = 100L,
                            Min = 1L,
                            Name = "Bột gạo",
                            Reminder = false,
                            ReminderEndDate = new DateTime(2021, 5, 24, 4, 48, 18, 908, DateTimeKind.Local).AddTicks(4830),
                            ReminderStartDate = new DateTime(2021, 5, 24, 4, 48, 18, 908, DateTimeKind.Local).AddTicks(3625)
                        },
                        new
                        {
                            Id = 2,
                            Amount = 10L,
                            Code = "NVL2",
                            Description = "Bột gạo dùng để làm bánh",
                            IdMaterialsType = 2,
                            Max = 100L,
                            Min = 10L,
                            Name = "Cam",
                            Reminder = false,
                            ReminderEndDate = new DateTime(2021, 5, 24, 4, 48, 18, 908, DateTimeKind.Local).AddTicks(7159),
                            ReminderStartDate = new DateTime(2021, 5, 24, 4, 48, 18, 908, DateTimeKind.Local).AddTicks(7147)
                        });
                });

            modelBuilder.Entity("KhoaLuan.Data.Entities.MaterialsType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("GroupType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AI");

                    b.HasKey("Id");

                    b.HasIndex("Code", "Name")
                        .IsUnique();

                    b.ToTable("MaterialsTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "LoaiNVL1",
                            GroupType = 0,
                            Name = "Bột"
                        },
                        new
                        {
                            Id = 2,
                            Code = "LoaiNVL2",
                            GroupType = 0,
                            Name = "Trái Cây"
                        });
                });

            modelBuilder.Entity("KhoaLuan.Data.Entities.Notification", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<Guid>("IdReceiver")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("Time")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2021, 5, 24, 4, 48, 18, 858, DateTimeKind.Local).AddTicks(2873));

                    b.Property<bool>("View")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("Id");

                    b.HasIndex("IdReceiver");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("KhoaLuan.Data.Entities.OrderDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<int>("Amount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("EnterAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("IdMaterials")
                        .HasColumnType("int");

                    b.Property<long>("IdOrderPlan")
                        .HasColumnType("bigint");

                    b.Property<int?>("IdSupplier")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IdMaterials");

                    b.HasIndex("IdOrderPlan");

                    b.HasIndex("IdSupplier");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("KhoaLuan.Data.Entities.OrderPlan", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<bool>("Censorship")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2021, 5, 24, 4, 48, 18, 830, DateTimeKind.Local).AddTicks(6972));

                    b.Property<DateTime>("ExpectedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2021, 5, 24, 4, 48, 18, 830, DateTimeKind.Local).AddTicks(7467));

                    b.Property<Guid?>("IdAuthority")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdCreator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdResponsible")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Note")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("Order")
                        .HasColumnType("bit");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("IdAuthority");

                    b.HasIndex("IdCreator");

                    b.HasIndex("IdResponsible");

                    b.ToTable("OrderPlans");
                });

            modelBuilder.Entity("KhoaLuan.Data.Entities.Pack", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<bool>("Default")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int?>("IdMaterials")
                        .HasColumnType("int");

                    b.Property<int?>("IdProduct")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PackType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<long>("Value")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("IdMaterials");

                    b.HasIndex("IdProduct");

                    b.ToTable("Packs");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Default = true,
                            IdMaterials = 1,
                            Name = "kg",
                            PackType = 0,
                            Value = 1L
                        },
                        new
                        {
                            Id = 2L,
                            Default = false,
                            IdMaterials = 1,
                            Name = "g",
                            PackType = 0,
                            Value = 1000L
                        },
                        new
                        {
                            Id = 3L,
                            Default = true,
                            IdMaterials = 2,
                            Name = "Trái",
                            PackType = 0,
                            Value = 1L
                        },
                        new
                        {
                            Id = 4L,
                            Default = true,
                            IdProduct = 1,
                            Name = "Bánh",
                            PackType = 1,
                            Value = 1L
                        });
                });

            modelBuilder.Entity("KhoaLuan.Data.Entities.ProcessPlan", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<bool>("Censorship")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2021, 5, 24, 4, 48, 18, 816, DateTimeKind.Local).AddTicks(9322));

                    b.Property<DateTime>("ExpectedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2021, 5, 24, 4, 48, 18, 816, DateTimeKind.Local).AddTicks(9748));

                    b.Property<Guid?>("IdAuthority")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdCreator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdResponsible")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Note")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("IdAuthority");

                    b.HasIndex("IdCreator");

                    b.HasIndex("IdResponsible");

                    b.ToTable("ProcessPlans");
                });

            modelBuilder.Entity("KhoaLuan.Data.Entities.ProcessingDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<int>("Amount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("EnterAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<long>("IdProcessPlan")
                        .HasColumnType("bigint");

                    b.Property<int>("IdRecipe")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IdProcessPlan");

                    b.HasIndex("IdRecipe");

                    b.ToTable("ProcessingDetails");
                });

            modelBuilder.Entity("KhoaLuan.Data.Entities.ProcessingVoucher", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdCreator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("IdPlan")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProcessPlanId")
                        .HasColumnType("bigint");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.HasIndex("ProcessPlanId");

                    b.ToTable("ProcessingVoucher");
                });

            modelBuilder.Entity("KhoaLuan.Data.Entities.ProcessingVoucherDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("IdRecipe")
                        .HasColumnType("int");

                    b.Property<int?>("RecipeId")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.ToTable("ProcessingVoucherDetail");
                });

            modelBuilder.Entity("KhoaLuan.Data.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<long>("Amount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdProductType")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("Max")
                        .HasColumnType("bigint");

                    b.Property<long?>("Min")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AI");

                    b.Property<bool>("Reminder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("ReminderEndDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2021, 5, 24, 4, 48, 18, 852, DateTimeKind.Local).AddTicks(4954));

                    b.Property<DateTime>("ReminderStartDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2021, 5, 24, 4, 48, 18, 852, DateTimeKind.Local).AddTicks(4562));

                    b.HasKey("Id");

                    b.HasIndex("IdProductType");

                    b.HasIndex("Code", "Name")
                        .IsUnique();

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 10L,
                            Code = "SP1",
                            Description = "Bánh làm từ cam vắt",
                            IdProductType = 1,
                            Max = 10L,
                            Min = 0L,
                            Name = "Bánh Cam",
                            Reminder = false,
                            ReminderEndDate = new DateTime(2021, 5, 24, 4, 48, 18, 910, DateTimeKind.Local).AddTicks(9045),
                            ReminderStartDate = new DateTime(2021, 5, 24, 4, 48, 18, 910, DateTimeKind.Local).AddTicks(7895)
                        });
                });

            modelBuilder.Entity("KhoaLuan.Data.Entities.ProductType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("IdProductTypeGroup")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AI");

                    b.HasKey("Id");

                    b.HasIndex("IdProductTypeGroup");

                    b.HasIndex("Code", "Name")
                        .IsUnique();

                    b.ToTable("ProductTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "LSP1",
                            IdProductTypeGroup = 1,
                            Name = "Bánh"
                        });
                });

            modelBuilder.Entity("KhoaLuan.Data.Entities.ProductTypeGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AI");

                    b.HasKey("Id");

                    b.HasIndex("Code", "Name")
                        .IsUnique();

                    b.ToTable("ProductTypeGroups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "NhomLSP1",
                            Name = "Thực Phẩm"
                        });
                });

            modelBuilder.Entity("KhoaLuan.Data.Entities.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("IdProduct")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Note")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("Prioritize")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("Id");

                    b.HasIndex("IdProduct");

                    b.HasIndex("Code", "Name")
                        .IsUnique();

                    b.ToTable("Recipes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "CTCB1",
                            IdProduct = 1,
                            Name = "Làm bánh Cam",
                            Prioritize = true
                        });
                });

            modelBuilder.Entity("KhoaLuan.Data.Entities.RecipeDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<int>("Amount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("IdMaterials")
                        .HasColumnType("int");

                    b.Property<int>("IdRecipe")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IdMaterials");

                    b.HasIndex("IdRecipe");

                    b.ToTable("RecipeDetails");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Amount = 1,
                            IdMaterials = 1,
                            IdRecipe = 1,
                            Unit = "kg"
                        },
                        new
                        {
                            Id = 2L,
                            Amount = 1,
                            IdMaterials = 2,
                            IdRecipe = 1,
                            Unit = "Trái"
                        });
                });

            modelBuilder.Entity("KhoaLuan.Data.Entities.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Email")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AI");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tax")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Suppliers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Cần Thơ",
                            Code = "NCC1",
                            Email = "nhacungcap@gmail.com",
                            Name = "Công Ty ABO",
                            Phone = "0869696969",
                            Tax = "011"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("0275d5a7-da4a-41c3-85ed-15e53cd1b7a0"),
                            RoleId = new Guid("88a28f0b-99cd-4893-ab70-0189c8c7fec5")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("KhoaLuan.Data.Entities.Bill", b =>
                {
                    b.HasOne("KhoaLuan.Data.Entities.AppUser", "Creator")
                        .WithMany("Bills")
                        .HasForeignKey("IdCreator")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KhoaLuan.Data.Entities.OrderPlan", "OrderPlan")
                        .WithMany("Bills")
                        .HasForeignKey("IdPlan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KhoaLuan.Data.Entities.Supplier", "Supplier")
                        .WithMany("Bills")
                        .HasForeignKey("IdSupplier")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creator");

                    b.Navigation("OrderPlan");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("KhoaLuan.Data.Entities.BillDetail", b =>
                {
                    b.HasOne("KhoaLuan.Data.Entities.Bill", "Bill")
                        .WithMany("BillDetails")
                        .HasForeignKey("IdBill")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KhoaLuan.Data.Entities.Material", "Material")
                        .WithMany("BillDetails")
                        .HasForeignKey("IdMaterials")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("Material");
                });

            modelBuilder.Entity("KhoaLuan.Data.Entities.Material", b =>
                {
                    b.HasOne("KhoaLuan.Data.Entities.MaterialsType", "MaterialsType")
                        .WithMany("Materials")
                        .HasForeignKey("IdMaterialsType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MaterialsType");
                });

            modelBuilder.Entity("KhoaLuan.Data.Entities.Notification", b =>
                {
                    b.HasOne("KhoaLuan.Data.Entities.AppUser", "Receiver")
                        .WithMany("NotificationReceiver")
                        .HasForeignKey("IdReceiver")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Receiver");
                });

            modelBuilder.Entity("KhoaLuan.Data.Entities.OrderDetail", b =>
                {
                    b.HasOne("KhoaLuan.Data.Entities.Material", "Material")
                        .WithMany("OrderDetails")
                        .HasForeignKey("IdMaterials")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KhoaLuan.Data.Entities.OrderPlan", "OrderPlan")
                        .WithMany("OrderDetails")
                        .HasForeignKey("IdOrderPlan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KhoaLuan.Data.Entities.Supplier", "Supplier")
                        .WithMany("OrderDetails")
                        .HasForeignKey("IdSupplier");

                    b.Navigation("Material");

                    b.Navigation("OrderPlan");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("KhoaLuan.Data.Entities.OrderPlan", b =>
                {
                    b.HasOne("KhoaLuan.Data.Entities.AppUser", "Authority")
                        .WithMany("OrderPlanAuthority")
                        .HasForeignKey("IdAuthority");

                    b.HasOne("KhoaLuan.Data.Entities.AppUser", "Creator")
                        .WithMany("OrderPlanCreators")
                        .HasForeignKey("IdCreator")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KhoaLuan.Data.Entities.AppUser", "Responsible")
                        .WithMany("OrderPlanResponsible")
                        .HasForeignKey("IdResponsible")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Authority");

                    b.Navigation("Creator");

                    b.Navigation("Responsible");
                });

            modelBuilder.Entity("KhoaLuan.Data.Entities.Pack", b =>
                {
                    b.HasOne("KhoaLuan.Data.Entities.Material", "Material")
                        .WithMany("Packs")
                        .HasForeignKey("IdMaterials");

                    b.HasOne("KhoaLuan.Data.Entities.Product", "Product")
                        .WithMany("Packs")
                        .HasForeignKey("IdProduct");

                    b.Navigation("Material");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("KhoaLuan.Data.Entities.ProcessPlan", b =>
                {
                    b.HasOne("KhoaLuan.Data.Entities.AppUser", "Authority")
                        .WithMany("ProcessPlanAuthority")
                        .HasForeignKey("IdAuthority");

                    b.HasOne("KhoaLuan.Data.Entities.AppUser", "Creator")
                        .WithMany("ProcessPlanCreators")
                        .HasForeignKey("IdCreator")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KhoaLuan.Data.Entities.AppUser", "Responsible")
                        .WithMany("ProcessPlanResponsibles")
                        .HasForeignKey("IdResponsible")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Authority");

                    b.Navigation("Creator");

                    b.Navigation("Responsible");
                });

            modelBuilder.Entity("KhoaLuan.Data.Entities.ProcessingDetail", b =>
                {
                    b.HasOne("KhoaLuan.Data.Entities.ProcessPlan", "ProcessPlan")
                        .WithMany("ProcessingDetails")
                        .HasForeignKey("IdProcessPlan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KhoaLuan.Data.Entities.Recipe", "Recipe")
                        .WithMany("ProcessingDetails")
                        .HasForeignKey("IdRecipe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProcessPlan");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("KhoaLuan.Data.Entities.ProcessingVoucher", b =>
                {
                    b.HasOne("KhoaLuan.Data.Entities.AppUser", "Creator")
                        .WithMany("ProcessingVouchers")
                        .HasForeignKey("CreatorId");

                    b.HasOne("KhoaLuan.Data.Entities.ProcessPlan", "ProcessPlan")
                        .WithMany("ProcessingVouchers")
                        .HasForeignKey("ProcessPlanId");

                    b.Navigation("Creator");

                    b.Navigation("ProcessPlan");
                });

            modelBuilder.Entity("KhoaLuan.Data.Entities.ProcessingVoucherDetail", b =>
                {
                    b.HasOne("KhoaLuan.Data.Entities.Recipe", "Recipe")
                        .WithMany("ProcessingVoucherDetails")
                        .HasForeignKey("RecipeId");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("KhoaLuan.Data.Entities.Product", b =>
                {
                    b.HasOne("KhoaLuan.Data.Entities.ProductType", "ProductType")
                        .WithMany("Products")
                        .HasForeignKey("IdProductType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductType");
                });

            modelBuilder.Entity("KhoaLuan.Data.Entities.ProductType", b =>
                {
                    b.HasOne("KhoaLuan.Data.Entities.ProductTypeGroup", "ProductTypeGroup")
                        .WithMany("ProductTypes")
                        .HasForeignKey("IdProductTypeGroup")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductTypeGroup");
                });

            modelBuilder.Entity("KhoaLuan.Data.Entities.Recipe", b =>
                {
                    b.HasOne("KhoaLuan.Data.Entities.Product", "Product")
                        .WithMany("Recipes")
                        .HasForeignKey("IdProduct")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("KhoaLuan.Data.Entities.RecipeDetail", b =>
                {
                    b.HasOne("KhoaLuan.Data.Entities.Material", "Material")
                        .WithMany("RecipeDetails")
                        .HasForeignKey("IdMaterials")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KhoaLuan.Data.Entities.Recipe", "Recipe")
                        .WithMany("RecipeDetails")
                        .HasForeignKey("IdRecipe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Material");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("KhoaLuan.Data.Entities.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("KhoaLuan.Data.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("KhoaLuan.Data.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("KhoaLuan.Data.Entities.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KhoaLuan.Data.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("KhoaLuan.Data.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KhoaLuan.Data.Entities.AppUser", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("NotificationReceiver");

                    b.Navigation("OrderPlanAuthority");

                    b.Navigation("OrderPlanCreators");

                    b.Navigation("OrderPlanResponsible");

                    b.Navigation("ProcessingVouchers");

                    b.Navigation("ProcessPlanAuthority");

                    b.Navigation("ProcessPlanCreators");

                    b.Navigation("ProcessPlanResponsibles");
                });

            modelBuilder.Entity("KhoaLuan.Data.Entities.Bill", b =>
                {
                    b.Navigation("BillDetails");
                });

            modelBuilder.Entity("KhoaLuan.Data.Entities.Material", b =>
                {
                    b.Navigation("BillDetails");

                    b.Navigation("OrderDetails");

                    b.Navigation("Packs");

                    b.Navigation("RecipeDetails");
                });

            modelBuilder.Entity("KhoaLuan.Data.Entities.MaterialsType", b =>
                {
                    b.Navigation("Materials");
                });

            modelBuilder.Entity("KhoaLuan.Data.Entities.OrderPlan", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("KhoaLuan.Data.Entities.ProcessPlan", b =>
                {
                    b.Navigation("ProcessingDetails");

                    b.Navigation("ProcessingVouchers");
                });

            modelBuilder.Entity("KhoaLuan.Data.Entities.Product", b =>
                {
                    b.Navigation("Packs");

                    b.Navigation("Recipes");
                });

            modelBuilder.Entity("KhoaLuan.Data.Entities.ProductType", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("KhoaLuan.Data.Entities.ProductTypeGroup", b =>
                {
                    b.Navigation("ProductTypes");
                });

            modelBuilder.Entity("KhoaLuan.Data.Entities.Recipe", b =>
                {
                    b.Navigation("ProcessingDetails");

                    b.Navigation("ProcessingVoucherDetails");

                    b.Navigation("RecipeDetails");
                });

            modelBuilder.Entity("KhoaLuan.Data.Entities.Supplier", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("OrderDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
